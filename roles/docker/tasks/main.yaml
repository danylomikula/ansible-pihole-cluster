- name: Check if Docker is installed
  ansible.builtin.command:
    cmd: which docker
  register: docker_check
  changed_when: false
  failed_when: false
  when:
    - inventory_hostname in groups['master']

- name: Download Docker convenience script
  ansible.builtin.get_url:
    url: "https://get.docker.com"
    dest: "/tmp/get-docker.sh"
    mode: "0755"
  when:
    - inventory_hostname in groups['master']
    - docker_check.rc != 0
    - ansible_os_family == "Debian"

- name: Install Docker
  ansible.builtin.command:
    cmd: "/tmp/get-docker.sh"
  register: docker_install_result
  changed_when: false
  notify: Reboot after Docker installation
  when:
    - inventory_hostname in groups['master']
    - docker_check.rc != 0
    - ansible_os_family == "Debian"

- name: Display Docker installation process
  ansible.builtin.debug:
    var: docker_install_result.stdout_lines
  when:
    - inventory_hostname in groups['master']
    - docker_check.rc != 0
    - ansible_os_family == "Debian"

- name: Add Docker repository [RedHat]
  ansible.builtin.yum_repository:
    name: docker-ce
    description: Docker CE Repository
    baseurl: "https://download.docker.com/linux/rhel/$releasever/$basearch/stable"
    enabled: true
    gpgcheck: true
    gpgkey: "https://download.docker.com/linux/centos/gpg"
  when:
    - inventory_hostname in groups['master']
    - docker_check.rc != 0
    - ansible_os_family == "RedHat"

- name: Install Docker
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  notify: Reboot after Docker installation
  when:
    - inventory_hostname in groups['master']
    - docker_check.rc != 0

- name: Enable & start Docker
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
  when:
    - inventory_hostname in groups['master']
    - docker_check.rc != 0

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
